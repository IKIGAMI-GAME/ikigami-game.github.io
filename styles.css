/* styles.css */
:root {
  --primary-color: #333333;
  --background: #ffffff;
  --text-color: #333333;
  --boot-lines: 13;            /* 固定行数（更新済み） */
  --boot-line-height: 1.2em;  /* 行間 */
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Press Start 2P', monospace;
  color: var(--text-color);
  background-color: var(--background);
  line-height: 1.5;
}

/* CSSのインポート方法を変更 - @importはHTMLで行う */

/* —— CRT ブート演出 —— */
#crt-overlay {
  position: fixed; inset: 0;
  background: #000;
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: opacity 1s ease;
}

.crt-frame {
  position: relative;
  width: 95%;
  height: 85%;
  margin: auto;
  background: #111;
  border-radius: 20px; /* 縁の湾曲 */
  box-shadow: 0 0 30px rgba(0, 255, 110, 0.5), 0 0 10px rgba(0, 255, 110, 0.3) inset;
  overflow: hidden;
  border: 15px solid #333;
  /* 正しいCRT風の湾曲効果 */
}
#crt-overlay.hidden {
  visibility: hidden;
  opacity: 0;
}

/* CRTオン効果 */
.crt-on {
  animation: crtOn 0.5s forwards;
}

@keyframes crtOn {
  0% { filter: brightness(0.5) contrast(1); }
  30% { filter: brightness(2) contrast(2); }
  40% { filter: brightness(0.7) contrast(1.5); }
  100% { filter: brightness(1) contrast(1); }
}

.crt-wrapper {
  position: relative;
  width: 100%; /* 画面全体に広がるよう調整 */
  height: 100%; /* 高さも調整 */
  margin: auto;
  padding: 2rem 3rem;
  background:
    radial-gradient(circle at center, rgba(0,255,110,0.15) 0%, rgba(0,255,110,0) 60%),
    radial-gradient(ellipse at center, rgba(0,0,0,0) 60%, rgba(0,0,0,0.35) 100%),
    #001b00;
  filter: contrast(1.5) brightness(1.6) saturate(1.3); /* コントラストと明るさを強化 */
  box-shadow:
    0 0 25px rgba(0,255,110,0.4) inset,
    0 0 40px 10px #00ff6a,
    0 0 120px 40px #00ff6a inset;
  overflow: hidden;
}

/* CRT湾曲効果 */
.crt-wrapper::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: transparent;
  border-radius: 50% / 10%;
  box-shadow: 0 0 50px rgba(0, 0, 0, 0.9) inset;
  pointer-events: none;
  /* 色収差（SVGフィルタ） */
  filter: url(#chromatic-aberration);
  z-index: 2;
}

.crt-wrapper::after {
  content: "";
  position: absolute; inset: 0;
  background:
    repeating-linear-gradient(
      0deg,
      rgba(0,0,0,0.15) 0px,
      rgba(0,0,0,0.15) 1px,
      transparent 1px,
      transparent 2px
    ),
    repeating-linear-gradient(
      90deg,
      rgba(255,0,0,0.08) 0px,
      rgba(255,0,0,0.08) 1px,
      rgba(0,255,0,0.08) 1px,
      rgba(0,255,0,0.08) 2px,
      rgba(0,0,255,0.08) 2px,
      rgba(0,0,255,0.08) 3px,
      transparent 3px,
      transparent 6px
    );
  pointer-events: none;
  mix-blend-mode: overlay;
  animation: scanline 10s linear infinite;
  z-index: 3;
}

/* CRTガラス反射効果 */
.crt-frame::after {
  content: "";
  position: absolute;
  top: -10%;
  left: -10%;
  right: -10%;
  bottom: 60%;
  background: linear-gradient(180deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%);
  transform: rotate(-25deg);
  pointer-events: none;
}

@keyframes scanline {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(100%);
  }
}

#boot-text {
  position: relative;
  width: 100%;
  height: auto;
  min-height: calc(var(--boot-line-height) * var(--boot-lines)); /* 固定行数に基づく高さ */
  color: #00ff6a;
  text-shadow: 0 0 5px rgba(0, 255, 106, 0.7);
  font-size: clamp(12px, 2vw, 16px);
  line-height: var(--boot-line-height);
  white-space: pre;           /* 固定行表示 */
  display: block;
  overflow: hidden;
  font-family: 'Courier New', monospace;
  letter-spacing: 1px;
}

/* フリッカー */
@keyframes flicker {
  0%, 100% { opacity: 0.97; }
  10% { opacity: 0.95; }
  20% { opacity: 0.9; }
  30% { opacity: 0.92; }
  40% { opacity: 0.9; }
  50% { opacity: 0.98; }
  60% { opacity: 0.94; }
  70% { opacity: 0.92; }
  80% { opacity: 0.9; }
  90% { opacity: 0.96; }
}

/* CRT全体のフリッカー */
#crt-overlay::before {
  content: "";
  position: absolute;
  inset: 0;
  background: transparent;
  opacity: 0.03;
  pointer-events: none;
  animation: flicker 0.2s infinite;
  z-index: 10000;
}

/* プツンと切れるエフェクト */
.cut {
  animation: cut 0.3s forwards;
}
@keyframes cut {
  0% { opacity: 1; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.02); filter: brightness(1.5); }
  60% { opacity: 0.8; transform: scale(0.1); filter: brightness(0.5); }
  100% { opacity: 0; transform: scale(0.1); filter: brightness(0); visibility: hidden; }
}
